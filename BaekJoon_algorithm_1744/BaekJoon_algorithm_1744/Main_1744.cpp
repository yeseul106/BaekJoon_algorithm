/*
-문제: 

길이가 N인 수열이 주어졌을 때, 그 수열의 합을 구하려고 한다. 하지만, 그냥 그 수열의 합을 모두 더해서 구하는 것이 아니라, 수열의 두 수를 묶으려고 한다. 
어떤 수를 묶으려고 할 때, 위치에 상관없이 묶을 수 있다. 하지만, 같은 위치에 있는 수(자기 자신)를 묶는 것은 불가능하다.
그리고 어떤 수를 묶게 되면, 수열의 합을 구할 때 묶은 수는 서로 곱한 후에 더한다.
예를 들면, 어떤 수열이 {0, 1, 2, 4, 3, 5}일 때, 그냥 이 수열의 합을 구하면 0+1+2+4+3+5 = 15이다. 하지만, 2와 3을 묶고, 4와 5를 묶게 되면, 0+1+(2*3)+(4*5) = 27이 되어 최대가 된다.
수열의 모든 수는 단 한번만 묶거나, 아니면 묶지 않아야한다.
수열이 주어졌을 때, 수열의 각 수를 적절히 묶었을 때, 그 합이 최대가 되게 하는 프로그램을 작성하시오.

-입력:

첫째 줄에 수열의 크기 N이 주어진다. N은 10,000보다 작은 자연수이다. 둘째 줄부터 N개의 줄에, 수열의 각 수가 주어진다. 
수열의 수는 -10,000보다 크거나 같고, 10,000보다 작거나 같은 정수이다.
*/

/*

*/

#include <iostream>
#include <string>
#include <algorithm>
#include <cstdio>
#pragma warning (disable:4996)
using namespace std;
#define MAX_SIZE 10000

int main() {

	int minus[MAX_SIZE] = {}; //음수 배열
	int plus[MAX_SIZE] = {}; //양수 배열

	bool isZero = false;
	int countOne = 0;
	int minusEnd = -1;
	int plusEnd = -1;

	int N;
	cin >> N;

	for (int i = 0; i < N; i++) {
		int temp;
		cin >> temp;

		if (temp == 0)
			isZero = true;
		else if (temp < 0)
		{
			minusEnd++;
			minus[minusEnd] = temp;
		}
		else if (temp == 1)
			countOne++;
		else
		{
			plusEnd++;
			plus[plusEnd] = temp;
		}
	}


	//배열 정렬하기 (내림차순 정리)
	sort(minus, minus+minusEnd+1);
	sort(plus, plus+plusEnd+1, greater<int>());

	/*
	for (int i = 0; i < minusEnd + 1; i++)
		printf("%d ", minus[i]);
	printf("\n");
	for (int i = 0; i < plusEnd + 1; i++)
		printf("%d ", plus[i]);
	*/

	//더하기
	int plustmp=0;
	int minustmp=0;

	for (int i = 0; i < minusEnd; i=i+2)
	{
		minustmp += minus[i] * minus[i + 1];
	}
	for (int i = 0; i < plusEnd; i=i+2) {
		plustmp += plus[i] * plus[i + 1];
	}


	if (minusEnd!=-1 && minusEnd % 2 == 0 && isZero)
		minustmp += 0;
	else if (minusEnd != -1 && minusEnd % 2 == 0 && !isZero)
		minustmp += minus[minusEnd];

	if (plusEnd!=-1 && plusEnd % 2 == 0)
		plustmp += plus[plusEnd];

	int result;
	result = plustmp + minustmp + (countOne*1);

	cout << result;
}

